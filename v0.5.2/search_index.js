var documenterSearchIndex = {"docs":
[{"location":"reference/constraints.html#ConstraintAPI","page":"Constraints","title":"Constraints","text":"","category":"section"},{"location":"reference/constraints.html","page":"Constraints","title":"Constraints","text":"Modules = [PowerModelsProtection]\nPrivate = false\nOrder = [:function]\nFilter = t -> startswith(string(t), \"constraint\")","category":"page"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_bus_fault_current-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Int64, Real}","page":"Constraints","title":"PowerModelsProtection.constraint_bus_fault_current","text":"constraint_bus_fault_current(pm::_PM.AbstractIVRModel, nw::Int, i::Int, fault_bus::Int, g::Real)\n\nCalculates the fault current at a bus\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_bus_fault_current-Tuple{PowerModels.AbstractIVRModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_bus_fault_current","text":"constraint_bus_fault_current(pm::_PM.AbstractIVRModel, i::Int; nw::Int=nw_id_default)\n\nconstraint for the fault current at the fault_bus\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_current_balance-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_current_balance","text":"constraint_current_balance(pm::_PM.AbstractIVRModel, n::Int, i::Int, bus_arcs, bus_gens, bus_gs, bus_bs)\n\nCalculates the current balance at the non-faulted buses\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_current_balance-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_current_balance","text":"constraint_current_balance(pm::_PM.AbstractPowerModel, i::Int; nw::Int=nw_id_default)\n\nConstraint to calculate the fault current at a bus and the current at other buses\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_fault_current_balance-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_fault_current_balance","text":"constraint_fault_current_balance(pm::_PM.AbstractIVRModel, n::Int, i::Int, bus_arcs, bus_gens, bus_gs, bus_bs)\n\nCalculates the current balance at the faulted bus\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_gen_voltage_drop-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Any, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_gen_voltage_drop","text":"constraint_gen_voltage_drop(pm::_PM.AbstractIVRModel, n::Int, i::Int, bus_id, r, x, vgr, vgi)\n\nStates that the bus voltage is equal to the internal voltage minus voltage drop across subtransient impedance\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_gen_voltage_drop-Tuple{PowerModels.AbstractPowerModel}","page":"Constraints","title":"PowerModelsProtection.constraint_gen_voltage_drop","text":"constraint_gen_voltage_drop(pm::_PM.AbstractPowerModel; nw::Int=nw_id_default)\n\nConstraint that sets the terminal voltage basd on the internal voltage and the stator impedence\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_i_inverter-Tuple{PowerModels.AbstractPowerModel}","page":"Constraints","title":"PowerModelsProtection.constraint_i_inverter","text":"constraint_i_inverter(pm::_PM.AbstractPowerModel; nw::Int=nw_id_default)\n\nConstraints for fault current contribution of inverter in grid-following mode assuming that the inverter current regulating loop operates slowly\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_i_inverter_vs-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Int64, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_i_inverter_vs","text":"constraint_i_inverter_vs(pm::_PM.AbstractIVRModel, n::Int, i::Int, bus_id::Int, vs, pg, qg, cm)\n\nConstraints for fault current contribution of inverter in grid-following mode assuming that the inverter current regulating loop operates slowly\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_bus_fault_current-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_bus_fault_current","text":"constraint_mc_bus_fault_current(pm::_PMD.AbstractUnbalancedIVRModel, i::Int; nw::Int=nw_id_default)\n\nConstraint for Kirchoff's current law on faulted buses\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_bus_fault_current-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64, Int64, Int64, Vector{Int64}, Matrix{<:Real}, Matrix{<:Real}}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_bus_fault_current","text":"constraint_mc_bus_fault_current(pm::_PMD.AbstractUnbalancedPowerModel, nw::Int, i::Int, bus::Int, connections::Vector{Int}, Gf::Matrix{<:Real}, Bf::Matrix{<:Real})\n\nCalculates the current at the faulted bus for multiconductor\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_current_balance-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_current_balance","text":"constraint_mc_current_balance(pm::_PMD.AbstractUnbalancedPowerModel, i::Int; nw::Int=nw_id_default)\n\nConstraint to calculate the fault current at a bus and the current at other buses for multiconductor\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_fault_current_balance-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel, Int64, Int64, Int64, Vector{Int64}, Vector{Bool}, Vector{Tuple{Tuple{Int64, Int64, Int64}, Vector{Int64}}}, Vector{Tuple{Tuple{Int64, Int64, Int64}, Vector{Int64}}}, Vector{Tuple{Tuple{Int64, Int64, Int64}, Vector{Int64}}}, Vector{Tuple{Int64, Vector{Int64}}}, Vector{Tuple{Int64, Vector{Int64}}}, Vector{Tuple{Int64, Vector{Int64}}}}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_fault_current_balance","text":"constraint_mc_fault_current_balance(pm::_PMD.AbstractUnbalancedIVRModel, nw::Int, i::Int, fault::Int, terminals::Vector{Int}, grounded::Vector{Bool}, bus_arcs::Vector{Tuple{Tuple{Int,Int,Int},Vector{Int}}}, bus_arcs_sw::Vector{Tuple{Tuple{Int,Int,Int},Vector{Int}}}, bus_arcs_trans::Vector{Tuple{Tuple{Int,Int,Int},Vector{Int}}}, bus_gens::Vector{Tuple{Int,Vector{Int}}}, bus_storage::Vector{Tuple{Int,Vector{Int}}}, bus_shunts::Vector{Tuple{Int,Vector{Int}}})\n\nCalculates the current balance at the faulted bus for multiconductor\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_gen_constant_power-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_gen_constant_power","text":"constraint_mc_gen_constant_power(pm::_PMD.AbstractUnbalancedPowerModel; nw::Int=nw_id_default)\n\nConstraint that sets the gen to output constant power\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_gen_power_setpoint_imag-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_gen_power_setpoint_imag","text":"constraint_mc_gen_power_setpoint_imag(pm::_PMD.AbstractUnbalancedPowerModel, n::Int, i, qg)\n\ngenerator reactive power setpoint constraint\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_gen_power_setpoint_imag-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_gen_power_setpoint_imag","text":"constraint_mc_gen_power_setpoint_imag(pm::_PMD.AbstractUnbalancedPowerModel, i::Int; nw::Int=nw_id_default, kwargs...)\n\ngenerator reactive power setpoint constraint\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_gen_pq_constant_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_gen_pq_constant_inverter","text":"constraint_mc_gen_pq_constant_inverter(pm::_PMD.AbstractUnbalancedPowerModel; nw::Int=nw_id_default)\n\nConstraint that sets the gen to output constant power\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_gen_voltage_drop-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel, Int64, Int64, Int64, Any, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_gen_voltage_drop","text":"constraint_mc_gen_voltage_drop(pm::_PMD.AbstractUnbalancedIVRModel, n::Int, i::Int, bus_id::Int, r, x, vgr, vgi, terminals)\n\nConstraint that sets the terminal voltage basd on the internal voltage and the stator impedence\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_gen_voltage_drop-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_gen_voltage_drop","text":"constraint_mc_gen_voltage_drop(pm::_PMD.AbstractUnbalancedPowerModel; nw::Int=nw_id_default)\n\nConstraint that sets the terminal voltage basd on the internal voltage and the stator impedence for multiconductor\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_grid_formimg_inverter_impedance-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel, Int64, Int64, Int64, Any, Any, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_grid_formimg_inverter_impedance","text":"constraint_mc_grid_formimg_inverter_impedance(pm::_PMD.AbstractUnbalancedIVRModel, nw::Int, i::Int, bus_id::Int, vr0, vi0, r, x, pmax, cmax)\n\nConstraints for fault current contribution of multiconductor inverter in grid-forming mode with power matching\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_grid_formimg_inverter_virtual_impedance-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel, Int64, Int64, Int64, Any, Any, Any, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_grid_formimg_inverter_virtual_impedance","text":"constraint_mc_grid_formimg_inverter_virtual_impedance(pm::_PMD.AbstractUnbalancedIVRModel, nw::Int, i::Int, bus_id::Int, vr0, vi0, pmax, cmax, smax, ang, terminals)\n\nConstraints for fault current contribution of multiconductor inverter in grid-forming mode with power matching\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_grid_forming_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel, Int64, Int64, Int64, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_grid_forming_inverter","text":"constraint_mc_grid_forming_inverter(pm::_PMD.AbstractUnbalancedIVRModel, nw::Int, i::Int, bus_id::Int, vrstar, vistar, pmax, cmax)\n\nConstraints for fault current contribution of multiconductor inverter in grid-forming mode\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_grid_forming_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_grid_forming_inverter","text":"constraint_mc_grid_forming_inverter(pm::_PMD.AbstractUnbalancedPowerModel, i::Int; nw::Int=nw_id_default)\n\nConstraints for fault current contribution of multiconductor inverter in grid-forming mode\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_grid_forming_inverter_impedance-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_grid_forming_inverter_impedance","text":"constraint_mc_grid_forming_inverter_impedance(pm::_PMD.AbstractUnbalancedPowerModel, i::Int; nw::Int=nw_id_default)\n\nConstraints for fault current contribution of multiconductor inverter in grid-forming mode with power matching\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_grid_forming_inverter_virtual_impedance-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_grid_forming_inverter_virtual_impedance","text":"constraint_mc_grid_forming_inverter_virtual_impedance(pm::_PMD.AbstractUnbalancedPowerModel, i::Int; nw::Int=nw_id_default)\n\nConstraints for fault current contribution of multiconductor inverter in grid-forming mode with power matching\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_i_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel, Int64, Int64, Int64, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_i_inverter","text":"constraint_mc_i_inverter(pm::_PMD.AbstractUnbalancedIVRModel, n::Int, i::Int, bus_id::Int, pg, qg, cmax)\n\nConstraints for fault current inverter with current set point\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_pq_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel, Int64, Int64, Int64, Any, Any, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_pq_inverter","text":"constraint_mc_pq_inverter(pm::_PMD.AbstractUnbalancedIVRModel, nw::Int, i::Int, bus_id::Int, pg, qg, cmax)\n\nConstraints for fault current contribution of multiconductor inverter in grid-following mode\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_pq_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_pq_inverter","text":"constraint_mc_pq_inverter(pm::_PMD.AbstractUnbalancedPowerModel, i::Int; nw::Int=nw_id_default)\n\nConstraints for fault current contribution of multiconductor inverter in grid-following mode\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_storage_grid_forming_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel, Int64, Any, Int64, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_storage_grid_forming_inverter","text":"constraint_mc_storage_grid_forming_inverter(pm::_PMD.AbstractUnbalancedIVRModel, nw::Int, i, bus_id::Int, connections)\n\nConstrants for grid-forming inverter with storage\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_mc_storage_grid_forming_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel, Int64}","page":"Constraints","title":"PowerModelsProtection.constraint_mc_storage_grid_forming_inverter","text":"constraint_mc_storage_grid_forming_inverter(pm::_PMD.AbstractUnbalancedIVRModel, i::Int; nw::Int=nw_id_default)\n\nConstraint for fault-current contribution battery energy storage inverters\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_pf_inverter_vs-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Int64, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_pf_inverter_vs","text":"constraint_pf_inverter_vs(pm::_PM.AbstractIVRModel, n::Int, i::Int, bus_id::Int, vs, pg, qg, cmax)\n\nConstraints for fault current contribution of inverter in grid-following mode with a real voltage drop to handle low-zero terminal voltages\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_pq_inverter-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Int64, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_pq_inverter","text":"constraint_pq_inverter(pm::_PM.AbstractIVRModel, nw::Int, i::Int, bus_id::Int, pg, qg, cmax)\n\nConstraints for fault current contribution of inverter in grid-following mode with pq set points\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_pq_inverter-Tuple{PowerModels.AbstractPowerModel}","page":"Constraints","title":"PowerModelsProtection.constraint_pq_inverter","text":"constraint_pq_inverter(pm::_PM.AbstractPowerModel; nw::Int=nw_id_default)\n\nConstraints for fault current contribution of inverter in grid-following mode with pq set points\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_pq_inverter_mccormick-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Int64, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_pq_inverter_mccormick","text":"constraint_pq_inverter_mccormick(pm::_PM.AbstractIVRModel, n::Int, i::Int, bus_id::Int, pg, qg, cmax)\n\nMcCormick relaxation of constraints for fault current contribution of inverter in grid-following mode\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_pq_inverter_region-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Int64, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_pq_inverter_region","text":"constraint_pq_inverter_region(pm::_PM.AbstractIVRModel, n::Int, i::Int, bus_id::Int, pg, qg, cmax)\n\nConstraints for fault current contribution of inverter in grid-following mode operating at arbitrary power factor. Requires objective term\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_unity_pf_inverter-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Int64, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_unity_pf_inverter","text":"constraint_unity_pf_inverter(pm::_PM.AbstractIVRModel, n::Int, i::Int, bus_id::Int, pg, qg, cmax)\n\nConstraints for fault current contribution of inverter in grid-following mode operating at unity power factor\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_unity_pf_inverter_disjunctive-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Int64, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_unity_pf_inverter_disjunctive","text":"constraint_unity_pf_inverter_disjunctive(pm::_PM.AbstractIVRModel, nw::Int, i::Int, bus_id::Int, pg, qg, cmax)\n\nConstraints for fault current contribution of inverter in grid-following mode with pseudo-binary for current-limiting\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_unity_pf_inverter_rs-Tuple{PowerModels.AbstractIVRModel, Int64, Int64, Int64, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_unity_pf_inverter_rs","text":"constraint_unity_pf_inverter_rs(pm::_PM.AbstractIVRModel, n::Int, i::Int, bus_id::Int, r, pg, qg, cm)\n\nConstraints for fault current contribution of inverter in grid-following mode operating at unity power factor with a series resistance to handle low-zero terminal voltages\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_v_inverter-Tuple{PowerModels.AbstractIVRModel, Int64, Any, Any, Any, Any, Any, Any, Any}","page":"Constraints","title":"PowerModelsProtection.constraint_v_inverter","text":"constraint_v_inverter(pm::_PM.AbstractIVRModel, n::Int, i, bus_id, r, x, vgr, vgi, cmax)\n\nConstraints for fault current contribution of inverter in grid-forming mode\n\n\n\n\n\n","category":"method"},{"location":"reference/constraints.html#PowerModelsProtection.constraint_v_inverter-Tuple{PowerModels.AbstractPowerModel}","page":"Constraints","title":"PowerModelsProtection.constraint_v_inverter","text":"constraint_v_inverter(pm::_PM.AbstractPowerModel; nw::Int=nw_id_default)\n\nConstraints for fault current contribution of inverter in grid-forming mode\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#VariableAPI","page":"Variables","title":"Variables","text":"","category":"section"},{"location":"reference/variables.html","page":"Variables","title":"Variables","text":"Modules = [PowerModelsProtection]\nPrivate = false\nOrder = [:function]\nFilter = t -> startswith(string(t), \"variable\")","category":"page"},{"location":"reference/variables.html#PowerModelsProtection.variable_branch_current-Tuple{PowerModels.AbstractIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_branch_current","text":"variable_branch_current(pm::_PM.AbstractIVRModel; nw::Int=nw_id_default, bounded::Bool=true, report::Bool=true, kwargs...)\n\nCopies from PowerModels and PowerModelsDistribution without power vars\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_bus_fault_current-Tuple{PowerModels.AbstractIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_bus_fault_current","text":"variable_bus_fault_current(pm::_PM.AbstractIVRModel; nw::Int=nw_id_default, report::Bool=true)\n\nfault current variables for active faults\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_gen-Tuple{PowerModels.AbstractIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_gen","text":"variable_gen(pm::_PM.AbstractIVRModel; nw::Int=nw_id_default, bounded::Bool=true, report::Bool=true, kwargs...)\n\nbuilds generator variables for transmission networks\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_gen_loading-Tuple{PowerModels.AbstractIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_gen_loading","text":"variable_gen_loading(pm::_PM.AbstractIVRModel; nw::Int=nw_id_default, bounded::Bool=true, report::Bool=true)\n\nvariable: pg[j] for j in gen\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_mc_bus_fault_current-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_mc_bus_fault_current","text":"variable_mc_bus_fault_current(pm::_PMD.AbstractUnbalancedIVRModel; nw::Int=nw_id_default, report::Bool=true)\n\nvariables for multiconductor fault currents for active faults\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_mc_grid_formimg_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_mc_grid_formimg_inverter","text":"variable_mc_grid_formimg_inverter(pm::_PMD.AbstractUnbalancedIVRModel; nw::Int=nw_id_default, bounded::Bool=true, kwargs...)\n\nvariables for multiconductor grid forming inverters\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_mc_pq_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_mc_pq_inverter","text":"variable_mc_pq_inverter(pm::_PMD.AbstractUnbalancedIVRModel; nw::Int=nw_id_default, bounded::Bool=true, kwargs...)\n\nvariables for multiconductor pq inverters\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_mc_storage_current-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_mc_storage_current","text":"variable_mc_storage_current(pm::_PMD.AbstractUnbalancedIVRModel; nw::Int=nw_id_default, bounded::Bool=true, report::Bool=true)\n\nvariables for output terminal currents for grid-connected energy storage\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_mc_storage_current_imaginary-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_mc_storage_current_imaginary","text":"variable_mc_storage_current_imaginary(pm::_PMD.AbstractUnbalancedIVRModel; nw::Int=nw_id_default, bounded::Bool=true, report::Bool=true)\n\nvariables for real portion of output terminal currents for grid-connected energy storage\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_mc_storage_current_real-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_mc_storage_current_real","text":"variable_mc_storage_current_real(pm::_PMD.AbstractUnbalancedIVRModel; nw::Int=nw_id_default, bounded::Bool=true, report::Bool=true)\n\nvariables for real portion of output terminal currents for grid-connected energy storage\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_mc_storage_grid_forming_inverter-Tuple{PowerModelsDistribution.AbstractUnbalancedIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_mc_storage_grid_forming_inverter","text":"variable_mc_storage_grid_forming_inverter(pm::_PMD.AbstractUnbalancedIVRModel; nw::Int=nw_id_default, bounded::Bool=true, kwargs...)\n\nvariables associated with grid-connected energy storage: internal voltage, virutal impedance, dc-link power, faulted state\n\n\n\n\n\n","category":"method"},{"location":"reference/variables.html#PowerModelsProtection.variable_pq_inverter-Tuple{PowerModels.AbstractIVRModel}","page":"Variables","title":"PowerModelsProtection.variable_pq_inverter","text":"variable_pq_inverter(pm::_PM.AbstractIVRModel; nw::Int=nw_id_default, bounded::Bool=true, kwargs...)\n\nvariables for pq inverters\n\n\n\n\n\n","category":"method"},{"location":"manual/fault_models.html#Fault-Models","page":"Fault Model","title":"Fault Models","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"This document describes the fault data models, and their mathematical formulations.","category":"page"},{"location":"manual/fault_models.html#Transmission","page":"Fault Model","title":"Transmission","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"This section describes the data model for faults under the transmission schema, i.e. when using solve_fault_study.","category":"page"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"Name Default Type Units Used Description\nfault_bus  String  always id of bus connection\ng  Real  always Fault conductance\nb 0.0 Real  always Fault susceptance\nstatus 1 Int  always 1 or 0. Indicates if component is enabled or disabled, respectively\nfault_type  String   Metadata field that helps users quickly identify type of fault \\in [\"lg\", \"ll\", \"llg\", \"3p\", \"3pg\"]","category":"page"},{"location":"manual/fault_models.html#Distribution","page":"Fault Model","title":"Distribution","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"This section describes the data models for the distribution","category":"page"},{"location":"manual/fault_models.html#ENGINEERING-data-model-(user-facing)","page":"Fault Model","title":"ENGINEERING data model (user-facing)","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"Name Default Type Units Used Description\nbus  String  always id of bus connection\nconnections  Vector{Int}  always Ordered list of connected conductors, size=nconductors\ng  Matrix{Real} Siemens always Fault conductance matrix, size=(nconductors,nconductors)\nb zeros(nconductors,nconductors) Matrix{Real} Siemens always Fault susceptance matrix, size=(nconductors,nconductors)\nstatus ENABLED Status  always ENABLED or DISABLED. Indicates if component is enabled or disabled, respectively\nfault_type  String   Metadata field that helps users quickly identify type of fault \\in [\"lg\", \"ll\", \"llg\", \"3p\", \"3pg\"]","category":"page"},{"location":"manual/fault_models.html#MATHEMATICAL-data-model-(internal)","page":"Fault Model","title":"MATHEMATICAL data model (internal)","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"Name Default Type Units Used Description\nfault_bus  Int  always id of bus connection\nconnections  Vector{Int}  always Ordered list of connected conductors, size=nconductors\ng  Matrix{Real} per-unit always Fault conductance matrix, size=(nconductors,nconductors)\nb zeros(nconductors,nconductors) Matrix{Real} per-unit always Fault susceptance matrix, size=(nconductors,nconductors)\nstatus 1 Int  always 1 or 0. Indicates if component is enabled or disabled, respectively","category":"page"},{"location":"manual/fault_models.html#Connection-Examples","page":"Fault Model","title":"Connection Examples","text":"","category":"section"},{"location":"manual/fault_models.html#Line-Ground-(Phase-A)","page":"Fault Model","title":"Line-Ground (Phase A)","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"Connections connections: [1,0] Fault admittance matrix g: $ \\begin{bmatrix} gf & -gf \\\n-gf & gf \\end{bmatrix} $ Fault admittance matrix b: $ \\begin{bmatrix} bf & -bf \\\n-bf & bf \\end{bmatrix} $","category":"page"},{"location":"manual/fault_models.html#Line-Neutral-(Ungrounded-Neutral,-Phase-A)","page":"Fault Model","title":"Line-Neutral (Ungrounded Neutral, Phase A)","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"Connections connections: [1,4] Fault admittance matrix g: $ \\begin{bmatrix} gf & -gf \\\n-gf & gf \\end{bmatrix} $ Fault admittance matrix b: $ \\begin{bmatrix} bf & -bf \\\n-bf & bf \\end{bmatrix} $","category":"page"},{"location":"manual/fault_models.html#Line-Line-(Phase-A-B)","page":"Fault Model","title":"Line-Line (Phase A-B)","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"Connections connections: [1,0] Fault admittance matrix g: $ \\begin{bmatrix} gf & -gf \\\n-gf & gf \\end{bmatrix} $ Fault admittance matrix b: $ \\begin{bmatrix} bf & -bf \\\n-bf & bf \\end{bmatrix} $","category":"page"},{"location":"manual/fault_models.html#Line-Line-Ground-(Phase-A-B)","page":"Fault Model","title":"Line-Line-Ground (Phase A-B)","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"Connections connections: [1,2,0] Fault admittance matrix g: $ \\begin{bmatrix} g{pg} + g{pp} & -g{pp} & -g{pg} \\\n-g{pp} & g{pg} + g{pp} & -g{pg} \\\n-g{pg} & -g{pg} & 2g{pg} \\\n\\end{bmatrix} $ Fault admittance matrix b: $ \\begin{bmatrix} b{pg} + b{pp} & -b{pp} & -b{pg} \\\n-b{pp} & b{pg} + b{pp} & -b{pg} \\\n-b{pg} & -b{pg} & 2b{pg} \\\n\\end{bmatrix} $","category":"page"},{"location":"manual/fault_models.html#Three-Phase-Ungrounded","page":"Fault Model","title":"Three-Phase Ungrounded","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"Connections connections: [1,2,3] Fault admittance matrix g: $ 3 \\begin{bmatrix} 2gf & -gf & -gf\\\n-gf & 2gf & -gf \\\n-gf & -gf & 2gf\\\n\\end{bmatrix} $ Fault admittance matrix b: $ 3 \\begin{bmatrix} 2bf & -bf & -bf\\\n-bf & 2bf & -bf \\\n-bf & -bf & 2bf\\\n\\end{bmatrix} $","category":"page"},{"location":"manual/fault_models.html#Three-Phase-Grounded","page":"Fault Model","title":"Three-Phase Grounded","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"Connections connections: [1,2,3,0] Fault admittance matrix g: $ \\begin{bmatrix} g{pg} + 2g{pp} & -g{pp} & -g{pp} & -g{pg} \\\n-g{pp} & g{pg} + 2g{pp} & -g{pg} & -g{pg} \\\n-g{pp} & -g{pp} & g{pg} + 2g{pp} & -g{pg} \\\n-g{pg} & -g{pg} & -g{pg} & 3g{pg} \\end{bmatrix} $ Fault admittance matrix b: $ \\begin{bmatrix} b{pg} + 2b{pp} & -b{pp} & -b{pp} & -b{pg} \\\n-b{pp} & b{pg} + 2b{pp} & -b{pg} & -b{pg} \\\n-b{pp} & -b{pp} & b{pg} + 2b{pp} & -b{pg} \\\n-b{pg} & -b{pg} & -b{pg} & 3b{pg} \\end{bmatrix} $","category":"page"},{"location":"manual/fault_models.html#Formulation","page":"Fault Model","title":"Formulation","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"Depending on fault type, the constraints between networks are as follows","category":"page"},{"location":"manual/fault_models.html#LG","page":"Fault Model","title":"LG","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"I_f1 = I_f2 = I_f0 = fracV_f1 + V_f2 + V_f0Z_f","category":"page"},{"location":"manual/fault_models.html#LL","page":"Fault Model","title":"LL","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"I_f1 = - I_f2 = fracV_f1 - V_f2Z_f","category":"page"},{"location":"manual/fault_models.html#LLG","page":"Fault Model","title":"LLG","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"V_f1 = V_f2","category":"page"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"I_f0 = fracV_f1 - V_f2Z_f","category":"page"},{"location":"manual/fault_models.html#P","page":"Fault Model","title":"3P","text":"","category":"section"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"I_f1 = fracV_f1Z_f","category":"page"},{"location":"manual/fault_models.html","page":"Fault Model","title":"Fault Model","text":"I_f2 = I_f0 = 0","category":"page"},{"location":"tutorials/distribution_fault_studies.html#Distribution-Fault-Studies","page":"Distribution Fault Studies","title":"Distribution Fault Studies","text":"","category":"section"},{"location":"reference/data_models.html#DataModelAPI","page":"Data Models","title":"Data Models","text":"","category":"section"},{"location":"reference/data_models.html#Parsers","page":"Data Models","title":"Parsers","text":"","category":"section"},{"location":"reference/data_models.html","page":"Data Models","title":"Data Models","text":"parse_file","category":"page"},{"location":"reference/data_models.html#PowerModelsProtection.parse_file","page":"Data Models","title":"PowerModelsProtection.parse_file","text":"parse_file(\n    file::String;\n    method::Union{String,Missing}=missing,\n    add_gensub::Bool=false,\n    flat_start::Bool=false,\n    neglect_line_charging::Bool=false,\n    neglect_transformer::Bool=false,\n    zero_gen_setpoints::Bool=false,\n    import_all::Bool=true,\n    kwargs...\n)\n\nFunction to parse data from dss (distribution) or matpower (transmission) files.\n\nmethod is for matpower files, and should be one of \"PMs\", \"solar-pf\", \"dg-pf\", \"pf\", or \"opf\", and \"PMD\" or missing for dss files.\n\nIf add_gensub, parse_matpower will attempt to find rs and xs from a gensub dict.\n\nExplanations of flat_start, neglect_line_charging, neglect_transformer, and zero_gen_setpoints can be found in prepare_transmission_data!\n\n\n\n\n\n","category":"function"},{"location":"reference/data_models.html#Constructors","page":"Data Models","title":"Constructors","text":"","category":"section"},{"location":"reference/data_models.html","page":"Data Models","title":"Data Models","text":"Modules = [PowerModelsProtection]\nPrivate = false\nOrder = [:function]\nPages = [\"components.jl\"]","category":"page"},{"location":"reference/data_models.html#PowerModelsProtection.add_fault!-Tuple{Dict{String, Any}, String, String, String, Vector{Int64}, Real, Real}","page":"Data Models","title":"PowerModelsProtection.add_fault!","text":"add_fault!(data::Dict{String,Any}, name::String, type::String, bus::String, connections::Vector{Int}, resistance::Real, phase_resistance::Real)\n\nCreates a fault dictionary given the type of fault, i.e., one of \"3p\", \"ll\", \"lg\", the bus on which the fault is active, the connections on which the fault applies, the resistance between the phase and ground, in the case of \"lg\", or phase and phase, and adds it to data[\"fault\"] under \"name\"\n\n\n\n\n\n","category":"method"},{"location":"reference/data_models.html#PowerModelsProtection.add_fault!-Tuple{Dict{String, Any}, String, String, String, Vector{Int64}, Real}","page":"Data Models","title":"PowerModelsProtection.add_fault!","text":"add_fault!(data::Dict{String,Any}, name::String, type::String, bus::String, connections::Vector{Int}, resistance::Real)\n\nCreates a fault dictionary given the type of fault, i.e., one of \"3pq\", \"llg\", the bus on which the fault is active, the connections on which the fault applies, the resistance between the phase and ground, and the phase_resistance between phases, and adds it to data[\"fault\"] under \"name\"\n\n\n\n\n\n","category":"method"},{"location":"reference/data_models.html#PowerModelsProtection.create_fault-Tuple{String, String, Vector{Int64}, Real, Real}","page":"Data Models","title":"PowerModelsProtection.create_fault","text":"create_fault(type::String, bus::String, connections::Vector{Int}, resistance::Real, phase_resistance::Real)::Dict{String,Any}\n\nCreates a fault dictionary given the type of fault, i.e., one of \"3pq\", \"llg\", the bus on which the fault is active, the connections on which the fault applies, the resistance between the phase and ground, and the phase_resistance between phases\n\n\n\n\n\n","category":"method"},{"location":"reference/data_models.html#PowerModelsProtection.create_fault-Tuple{String, String, Vector{Int64}, Real}","page":"Data Models","title":"PowerModelsProtection.create_fault","text":"create_fault(type::String, bus::String, connections::Vector{Int}, resistance::Real, phase_resistance::Real)::Dict{String,Any}\n\nCreates a fault dictionary given the type of fault, i.e., one of \"3p\", \"ll\", \"lg\", the bus on which the fault is active, the connections on which the fault applies, the resistance between the phase and ground, in the case of \"lg\", or phase and phase.\n\n\n\n\n\n","category":"method"},{"location":"reference/data_models.html#Model-Transformations","page":"Data Models","title":"Model Transformations","text":"","category":"section"},{"location":"reference/data_models.html","page":"Data Models","title":"Data Models","text":"transform_data_model\ntransform_solution","category":"page"},{"location":"reference/data_models.html#PowerModelsProtection.transform_data_model","page":"Data Models","title":"PowerModelsProtection.transform_data_model","text":"custom version of transform_data_model from PowerModelsDistribution for easy model transformation\n\n\n\n\n\n","category":"function"},{"location":"reference/data_models.html#PowerModelsProtection.transform_solution","page":"Data Models","title":"PowerModelsProtection.transform_solution","text":"custom version of transform_solution from PowerModelsDistribution to aid in easy solution transformation\n\n\n\n\n\n","category":"function"},{"location":"reference/data_models.html#Unit-conversions","page":"Data Models","title":"Unit conversions","text":"","category":"section"},{"location":"reference/data_models.html","page":"Data Models","title":"Data Models","text":"Modules = [PowerModelsProtection]\nPrivate = false\nOrder = [:function]\nPages = [\"units.jl\"]","category":"page"},{"location":"reference/data_models.html#PowerModelsProtection.make_fault_si!-Tuple{Dict{String}, Dict{String}, Dict{String}, Dict{String}}","page":"Data Models","title":"PowerModelsProtection.make_fault_si!","text":"helper function to convert fault object units back into si units\n\n\n\n\n\n","category":"method"},{"location":"reference/data_models.html#Helper-Functions","page":"Data Models","title":"Helper Functions","text":"","category":"section"},{"location":"reference/data_models.html","page":"Data Models","title":"Data Models","text":"","category":"page"},{"location":"reference/problems.html#ProblemAPI","page":"Problems","title":"Problems","text":"","category":"section"},{"location":"reference/problems.html#Solvers","page":"Problems","title":"Solvers","text":"","category":"section"},{"location":"reference/problems.html","page":"Problems","title":"Problems","text":"Modules = [PowerModelsProtection]\nPrivate = false\nOrder = [:function]\nFilter = t -> startswith(string(t), \"solve\")","category":"page"},{"location":"reference/problems.html#PowerModelsProtection.solve_fault_study-Tuple{Dict{String, Any}, Any}","page":"Problems","title":"PowerModelsProtection.solve_fault_study","text":"solve_fault_study(case::Dict{String,Any}, solver; kwargs...)\n\nSolves a fault study using all active faults under case[\"fault\"] for transmission (matpower) data sets given an optimization solver\n\nkwargs can be any valid keyword argument for PowerModels' run_model function.\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.solve_fault_study-Tuple{Dict{String}, Dict{String}, Any}","page":"Problems","title":"PowerModelsProtection.solve_fault_study","text":"solve_fault_study(case::Dict{String,<:Any}, fault_studies::Dict{String,<:Any}, solver; kwargs...)::Dict{String,Any}\n\nSolves a series fault studies in fault_studies, e.g., generated by build_fault_study for transmission (matpower) data sets given an optimization solver\n\nkwargs can be any valid keyword argument for PowerModels' run_model function.\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.solve_fault_study-Tuple{String, Any}","page":"Problems","title":"PowerModelsProtection.solve_fault_study","text":"solve_fault_study(file::String, solver; kwargs...)\n\nGiven a file, parses file and solves a series of fault studies\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.solve_mc_dg_pf-Tuple{Dict{String}, Any}","page":"Problems","title":"PowerModelsProtection.solve_mc_dg_pf","text":"solve_mc_dg_pf(data::Dict{String,<:Any}, solver; kwargs...)\n\nRun Power Flow Problem with DG\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.solve_mc_dg_pf-Tuple{String, Any}","page":"Problems","title":"PowerModelsProtection.solve_mc_dg_pf","text":"solve_mc_dg_pf(file::String, solver; kwargs...)\n\nRun Power Flow Problem with DG\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.solve_mc_fault_study-Tuple{Dict{String}, Any}","page":"Problems","title":"PowerModelsProtection.solve_mc_fault_study","text":"solve_mc_fault_study(case::Dict{String,<:Any}, solver; kwargs...)\n\nFunction to solve a multiconductor (distribution) fault study given a data set case and optimization solver\n\nkwargs can be any valid keyword argument for PowerModelsDistribution's solve_mc_model\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.solve_mc_fault_study-Tuple{Dict{String}, Dict{String}, Any}","page":"Problems","title":"PowerModelsProtection.solve_mc_fault_study","text":"solve_mc_fault_study(case::Dict{String,<:Any}, fault_studies::Dict{String,<:Any}, solver; kwargs...)\n\nSolves a series of fault studies given by fault_studies, e.g., built from build_mc_fault_study.\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.solve_mc_fault_study-Tuple{String, Any}","page":"Problems","title":"PowerModelsProtection.solve_mc_fault_study","text":"solve_mc_fault_study(file::String, solver; kwargs...)\n\nGiven a file, parses the file, and runs the fault study.\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.solve_mc_pf-Tuple{Dict{String}, Any}","page":"Problems","title":"PowerModelsProtection.solve_mc_pf","text":"solve_mc_pf(data::Dict{String,<:Any}, solver; kwargs...)\n\nRun Power Flow Problem with Solar\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.solve_mc_pf-Tuple{String, Any}","page":"Problems","title":"PowerModelsProtection.solve_mc_pf","text":"solve_mc_pf(file::String, solver; kwargs...)\n\nRun Power Flow Problem with Solar\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#Builders","page":"Problems","title":"Builders","text":"","category":"section"},{"location":"reference/problems.html","page":"Problems","title":"Problems","text":"Modules = [PowerModelsProtection]\nPrivate = false\nOrder = [:function]\nFilter = t -> startswith(string(t), \"build\")","category":"page"},{"location":"reference/problems.html#PowerModelsProtection.build_fault_study-Tuple{Dict{String}}","page":"Problems","title":"PowerModelsProtection.build_fault_study","text":"build_fault_study(data::Dict; default_fault_resistance::Real=0.0001)\n\nBuilds a dictionary of fault studies on a transmission (single-phase positive sequence) network that are intended to be used in conjunction with solve_fault_study.\n\nThe function will iterate over all buses and create faults using the default fault resistance. The fault study dictionary will have the following structure:\n\n    Dict{String,Any}(\n        \"bus_i\" => Dict{String,Any}(\n            \"fault_bus\" => bus_i\n            \"gf\" => 1 / resistance,\n            \"status\" => 1\n        ),\n        ...\n    )\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.build_fault_study-Tuple{PowerModels.AbstractPowerModel}","page":"Problems","title":"PowerModelsProtection.build_fault_study","text":"build_fault_study(pm::_PM.AbstractPowerModel)\n\nBuilds a transmission fault study optimization problem\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.build_mc_dg_pf-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel}","page":"Problems","title":"PowerModelsProtection.build_mc_dg_pf","text":"build_mc_dg_pf(pm::_PMD.AbstractUnbalancedPowerModel)\n\nConstructor for Power Flow Problem with DG\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.build_mc_fault_study-Tuple{Dict{String}}","page":"Problems","title":"PowerModelsProtection.build_mc_fault_study","text":"build_mc_fault_study(data::Dict{String,<:Any}; resistance::Real=0.01, phase_resistance::Real=0.01)::Dict{String,Any}\n\nAdd all fault type data to model for study for multiconductor networks\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.build_mc_fault_study-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel}","page":"Problems","title":"PowerModelsProtection.build_mc_fault_study","text":"build_mc_fault_study(pm::_PMD.AbstractUnbalancedPowerModel)\n\nBuilds a multiconductor (distribution) fault study optimization problem\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.build_mc_pf-Tuple{PowerModelsDistribution.AbstractUnbalancedPowerModel}","page":"Problems","title":"PowerModelsProtection.build_mc_pf","text":"build_mc_pf(pm::_PMD.AbstractUnbalancedPowerModel)\n\nConstructor for Power Flow Problem with Solar\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#PowerModelsProtection.build_mc_sparse_fault_study-Tuple{Dict{String}}","page":"Problems","title":"PowerModelsProtection.build_mc_sparse_fault_study","text":"build_mc_sparse_fault_study(data::Dict{String,<:Any}; resistance::Real=0.01, phase_resistance::Real=0.01)::Dict{String,Any}\n\nBuilds sparse collection of fault studies using a network graph\n\n\n\n\n\n","category":"method"},{"location":"reference/problems.html#Solution-Helpers","page":"Problems","title":"Solution Helpers","text":"","category":"section"},{"location":"reference/problems.html","page":"Problems","title":"Problems","text":"Modules = [PowerModelsProtection]\nPrivate = false\nOrder = [:function]\nFilter = t -> startswith(string(t), \"sol_\")","category":"page"},{"location":"reference/problems.html#DEPRECIATED-Solver-functions","page":"Problems","title":"DEPRECIATED Solver functions","text":"","category":"section"},{"location":"reference/problems.html","page":"Problems","title":"Problems","text":"Modules = [PowerModelsProtection]\nPrivate = false\nOrder = [:function]\nFilter = t -> startswith(string(t), \"run\")","category":"page"},{"location":"tutorials/transmission_fault_studies.html#Transmission-Fault-Studies","page":"Transmission Fault Studies","title":"Transmission Fault Studies","text":"","category":"section"},{"location":"reference/internal.html#Internal-Functions","page":"Internal Functions","title":"Internal Functions","text":"","category":"section"},{"location":"reference/internal.html","page":"Internal Functions","title":"Internal Functions","text":"Modules = [PowerModelsProtection]\nPublic = false","category":"page"},{"location":"reference/internal.html#PowerModelsProtection._pmp_dimensionalize_math_extensions","page":"Internal Functions","title":"PowerModelsProtection._pmp_dimensionalize_math_extensions","text":"pointers for fields to get unit transformations back to si units in solutions\n\n\n\n\n\n","category":"constant"},{"location":"reference/internal.html#PowerModelsProtection._pmp_eng2math_passthrough","page":"Internal Functions","title":"PowerModelsProtection._pmp_eng2math_passthrough","text":"field/values to passthrough from the ENGINEERING to MATHEMATICAL data models\n\n\n\n\n\n","category":"constant"},{"location":"reference/internal.html#PowerModelsProtection._pmp_map_math2eng_extensions","page":"Internal Functions","title":"PowerModelsProtection._pmp_map_math2eng_extensions","text":"necessary function reference dict for solution transformations\n\n\n\n\n\n","category":"constant"},{"location":"reference/internal.html#PowerModelsProtection._add_dict-Tuple{Dict}","page":"Internal Functions","title":"PowerModelsProtection._add_dict","text":"Function to help add keyword arguments to the circuit information dictionary.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._bisection-NTuple{4, Any}","page":"Internal Functions","title":"PowerModelsProtection._bisection","text":"Bisection solver used to help fit a curve to provided points on tcc_curves.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._check_keys-Tuple{Dict{String, Any}, Union{Vector{SubString{String}}, Vector{String}}}","page":"Internal Functions","title":"PowerModelsProtection._check_keys","text":"Function to apply haskey function to all elements in a vector. Used for checking if all cts are in the  circuit when adding a differential relay. Returns a Bool\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._create_3p_fault-Tuple{String, Vector{Int64}, Real}","page":"Internal Functions","title":"PowerModelsProtection._create_3p_fault","text":"creates a three-phase fault\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._create_3pg_fault-Tuple{String, Vector{Int64}, Real, Real}","page":"Internal Functions","title":"PowerModelsProtection._create_3pg_fault","text":"creates a three-phase-ground fault\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._create_lg_fault-Tuple{String, Vector{Int64}, Real}","page":"Internal Functions","title":"PowerModelsProtection._create_lg_fault","text":"creates a line-ground fault\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._create_ll_fault-Tuple{String, Vector{Int64}, Real}","page":"Internal Functions","title":"PowerModelsProtection._create_ll_fault","text":"creates a line-line fault\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._create_llg_fault-Tuple{String, Vector{Int64}, Real, Real}","page":"Internal Functions","title":"PowerModelsProtection._create_llg_fault","text":"creates a line-line-ground fault\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._differential_time-Tuple{Dict{String, Any}, Number}","page":"Internal Functions","title":"PowerModelsProtection._differential_time","text":"Function that calculates short-invers operation time of relay. Uses restraint instead of tap setting.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._dss2eng_ct!-Tuple{Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._dss2eng_ct!","text":"Helper function to convert dss data for monitors to engineering current transformer model.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._dss2eng_curve!-Tuple{Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._dss2eng_curve!","text":"Helper function for converting dss tcc_curves to engineering model\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._dss2eng_fuse!-Tuple{Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._dss2eng_fuse!","text":"Helper function for converting dss fuse to engineering fuse\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._dss2eng_gen_dynamics!-Tuple{Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._dss2eng_gen_dynamics!","text":"helper function to build extra dynamics information for generator or vsource objects\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._dss2eng_gen_model!-Tuple{Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._dss2eng_gen_model!","text":"helper function to define generator typr from opendss models\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._dss2eng_relay!-Tuple{Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._dss2eng_relay!","text":"Helper function for converting dss relay to engineering relay model.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._dss2eng_solar_dynamics!-Tuple{Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._dss2eng_solar_dynamics!","text":"helper function to build extra dynamics information for pvsystem objects\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._eng2math_fault!-Tuple{Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._eng2math_fault!","text":"helper function to transformer fault objects from ENGINEERING to MATHEMATICAL data models\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._eng2math_protection!-Tuple{Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._eng2math_protection!","text":"helper function to transform protection equipment objects from ENGINEERING to MATHEMATICAL data models\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._fuse_operation-Tuple{Dict{String, Any}, Dict{String, Any}, Vector}","page":"Internal Functions","title":"PowerModelsProtection._fuse_operation","text":"Determines whether a fuse operates given the current through the line it is protecting\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._get_current-Tuple{Dict{String, Any}, Dict{String, Any}, Any, Any}","page":"Internal Functions","title":"PowerModelsProtection._get_current","text":"Function to get current that is flowing through the relay or fuse we are looking at. Gets the type of relay from dictionary then uses the proper method for calculating current through relay operating coil. Outputs a vector.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._get_current_math-Tuple{Dict{Symbol}, Dict{String, Any}, Any, Any, Vector}","page":"Internal Functions","title":"PowerModelsProtection._get_current_math","text":"Same as getcurrent but uses mathematical model.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._get_phase_base_order-Tuple{Vector{Int64}}","page":"Internal Functions","title":"PowerModelsProtection._get_phase_base_order","text":"helper function to get faulted phases base order\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._interpolate_time-Tuple{Any, Any, Any}","page":"Internal Functions","title":"PowerModelsProtection._interpolate_time","text":"Function to interpolate time values from tcc_curve\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._long_time-Tuple{Dict{String, Any}, Number}","page":"Internal Functions","title":"PowerModelsProtection._long_time","text":"Function that calculates the long-inverse time of a relay for delayed trips.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._map_math2eng_fault!-Tuple{Dict{String}, Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._map_math2eng_fault!","text":"helper function to transform fault solutions back into ENGINEERING from MATHEMATICAL data models\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._map_math2eng_protection!-Tuple{Dict{String}, Dict{String}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._map_math2eng_protection!","text":"Helper function to convert tripped relays and blown fuses from MATHEMATICAL to ENGINEERING models\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._non_ideal_ct-Tuple{Any, Any, Any}","page":"Internal Functions","title":"PowerModelsProtection._non_ideal_ct","text":"_non_ideal_ct(relay_data,CT_data,Iabc)\n\nConverts primary side current to the actual current going through relay coil based on non-ideal parameters. Unused.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._p_to_s-Tuple{Vector}","page":"Internal Functions","title":"PowerModelsProtection._p_to_s","text":"Function to convert phase values to sequence values. Takes vector of 3 phases, returns vector of 3 sequences.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._rebase_pu_fault!-Tuple{Dict{String}, Dict{String}, Any, Any, Real, Real, Any}","page":"Internal Functions","title":"PowerModelsProtection._rebase_pu_fault!","text":"function to rebase units into pu on fault objects\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._rebase_pu_gen_dynamics!-Tuple{Dict{String}, Dict{String}, Any, Any, Real, Real, Any}","page":"Internal Functions","title":"PowerModelsProtection._rebase_pu_gen_dynamics!","text":"function to rebase extra fields for generator dynamics into per unit\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._rebase_pu_solar!-Tuple{Dict{String}, Dict{String}, Any, Any, Real, Real, Any}","page":"Internal Functions","title":"PowerModelsProtection._rebase_pu_solar!","text":"function to rebase extra fields for solar into per unit\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._ref_add_fault!-Tuple{Dict{Symbol}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._ref_add_fault!","text":"Adds the fault to the model\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._ref_add_grid_forming_bus!-Tuple{Dict{Symbol}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._ref_add_grid_forming_bus!","text":"identifies grid forming buses\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._ref_add_mc_fault!-Tuple{Dict{Symbol}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._ref_add_mc_fault!","text":"Adds the fault to the model for multiconductor\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._ref_add_mc_solar!-Tuple{Dict{Symbol}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._ref_add_mc_solar!","text":"Calculates the power from solar based on inputs\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._ref_add_mc_storage!-Tuple{Dict{Symbol}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._ref_add_mc_storage!","text":"Add battery energy storage to the model\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._relay_operation-Tuple{Dict{String, Any}, Vector}","page":"Internal Functions","title":"PowerModelsProtection._relay_operation","text":"Determines whether a relay operates given the current through its protected object\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._restraint-Tuple{Dict{String, Any}, Vector, Number}","page":"Internal Functions","title":"PowerModelsProtection._restraint","text":"Function that calculated the slope setting of differential relay based on tap setting.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._short_time-Tuple{Dict{String, Any}, Number}","page":"Internal Functions","title":"PowerModelsProtection._short_time","text":"Function that calculates the short-inverse time of a relay for fast trips.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._solution_fs!-Tuple{Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._solution_fs!","text":"adds additional variable transformations for fault study solutions of distribution networks\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._solution_pm_fs!-Tuple{Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._solution_pm_fs!","text":"adds additional variable transformations for fault study solutions of transmission networks\n\n\n\n\n\n","category":"method"},{"location":"reference/internal.html#PowerModelsProtection._solution_protection!-Tuple{Dict{Symbol, Any}, Dict{String}}","page":"Internal Functions","title":"PowerModelsProtection._solution_protection!","text":"calculates relay and fuse operation times and adds them to solution dictionary\n\n\n\n\n\n","category":"method"},{"location":"index.html#PowerModelsProtection.jl-Documentation","page":"Introduction","title":"PowerModelsProtection.jl Documentation","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"CurrentModule = PowerModelsProtection","category":"page"},{"location":"index.html#Overview","page":"Introduction","title":"Overview","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"PowerModelsProtection.jl is a Julia/JuMP extension package to PowerModels.jl and PowerModelsDistribution.jl for modeling of protection coordination on power grids.","category":"page"},{"location":"index.html#Installation","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The latest stable release of PowerModelsProtection can be installed using the Julia package manager with","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Pkg.add(\"PowerModelsProtection\")","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"For the current development version, \"checkout\" this package with","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Pkg.develop(Pkg.PackageSpec(;name=\"PowerModelsProtection\", url=\"https://github.com/lanl-ansi/PowerModelsProtection.jl.git\"))","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"At least one solver is required for running PowerModelsProtection.  The open-source solver Ipopt is recommended, as it is extremely fast, and can be used to solve a wide variety of the problems and network formulations provided in PowerModelsProtection.  The Ipopt solver can be installed via the package manager with","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Pkg.add(\"Ipopt\")","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Test that the package works by running","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Pkg.test(\"PowerModelsProtection\")","category":"page"},{"location":"manual/quickguide.html#Quick-Start-Guide","page":"Getting Started","title":"Quick Start Guide","text":"","category":"section"},{"location":"manual/quickguide.html","page":"Getting Started","title":"Getting Started","text":"Once PowerModelsProtection is installed, Ipopt is installed, and a network data file (e.g., \"case5_fault.m\" in the package folder under ./test/data/trans) has been acquired, a short-circuit solve can be executed with,","category":"page"},{"location":"manual/quickguide.html","page":"Getting Started","title":"Getting Started","text":"using PowerModelsProtection\nusing Ipopt\n\nipopt_solver = optimizer_with_attributes(Ipopt.Optimizer, \"print_level\"=>0, \"tol\"=>1e-6)\ncase5_fault = parse_file(\"case5_fault.m\")\nadd_fault!(case5_fault, 1, 2, 0.0001)\nresult = solve_fault_study(case5_fault, ipopt_solver)","category":"page"},{"location":"manual/quickguide.html#Adding-Faults","page":"Getting Started","title":"Adding Faults","text":"","category":"section"},{"location":"manual/quickguide.html","page":"Getting Started","title":"Getting Started","text":"To add a fault, use the add_fault! command","category":"page"},{"location":"manual/quickguide.html#Transmission","page":"Getting Started","title":"Transmission","text":"","category":"section"},{"location":"manual/quickguide.html","page":"Getting Started","title":"Getting Started","text":"case5 = parse_file(\"case5_fault.m\")\nadd_fault!(case5, 1, 2, 0.0001)","category":"page"},{"location":"manual/quickguide.html#Distribution","page":"Getting Started","title":"Distribution","text":"","category":"section"},{"location":"manual/quickguide.html","page":"Getting Started","title":"Getting Started","text":"case3_balanced_pv = parse_file(\"case3_balanced_pv.dss\"))\nadd_fault!(data, \"testfault\", \"lg\", \"loadbus\", [1,4], 0.001)","category":"page"},{"location":"manual/quickguide.html#Getting-Results","page":"Getting Started","title":"Getting Results","text":"","category":"section"},{"location":"manual/quickguide.html","page":"Getting Started","title":"Getting Started","text":"To perform a short-circuit solve, use the solve_fault_study or solve_mc_fault_study command","category":"page"},{"location":"manual/quickguide.html#Transmission-2","page":"Getting Started","title":"Transmission","text":"","category":"section"},{"location":"manual/quickguide.html","page":"Getting Started","title":"Getting Started","text":"result = solve_fault_study(case5, ipopt_solver)\n````\n\n### Distribution\n","category":"page"},{"location":"manual/quickguide.html","page":"Getting Started","title":"Getting Started","text":"julia result = solvemcfaultstudy(case3balancedpv, ipoptsolver) ````","category":"page"},{"location":"manual/quickguide.html#Examples","page":"Getting Started","title":"Examples","text":"","category":"section"},{"location":"manual/quickguide.html","page":"Getting Started","title":"Getting Started","text":"More examples of working with the engineering data model can be found in the /examples folder of the PowerModelsProtection.jl repository. These are Pluto Notebooks; instructions for running them can be found in the Pluto documentation","category":"page"}]
}
